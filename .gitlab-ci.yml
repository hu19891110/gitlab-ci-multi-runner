image: golang:1.7

stages:
- prebuild
- test
- build
- package
- release

before_script:
- source ci/prepare

.docker: &docker
  before_script:
  - source ci/prepare
  - wget -q -O /usr/bin/docker https://get.docker.com/builds/Linux/x86_64/docker-1.10.3
  - chmod +x /usr/bin/docker
  services: ["docker:dind"]
  variables:
    DOCKER_DRIVER: overlay
    DOCKER_HOST: tcp://docker:2375
  tags:
  - docker

bindata:
  <<: *docker
  stage: prebuild
  script:
  - apt-get install -yqqq xz-utils
  - make deps
  - make docker
  artifacts:
    paths:
    - out/docker/prebuilt-x86_64.tar.xz
    - out/docker/prebuilt-arm.tar.xz
    - executors/docker/bindata.go
    expire_in: 7d

clone test repo:
  stage: prebuild
  script:
  - mkdir tmp
  - succeed=0
  - for i in {1..3}; do git clone https://gitlab.com/gitlab-org/gitlab-test.git tmp/gitlab-test && succeed=1 && break; echo "retrying"; done
  - '[[ "$succeed" -eq 1 ]]'
  artifacts:
    paths:
    - tmp/gitlab-test
    expire_in: 7d

code style:
  stage: test
  script:
  - source ci/touch_make_dependencies
  - make deps
  - make fmt
  - make lint
  - make complexity
  tags:
  - docker

unit tests:
  stage: test
  script:
  - source ci/touch_make_dependencies
  - make deps
  - make test
  tags:
  - docker

docker executor:
  <<: *docker
  stage: test
  script:
  - source ci/touch_make_dependencies
  - go test -cover ./executors/docker/

integration windows:
  stage: test
  before_script:
  - $GODIR = "$env:GOPATH\src\gitlab.com\gitlab-org"
  - $target_path = "$GODIR\gitlab-ci-multi-runner"
  - $current_path = pwd
  - md $GODIR -Force
  - if (Test-Path $target_path) { cmd /c rmdir $target_path }
  - cmd /c mklink /D $target_path $current_path
  - cd $GODIR\gitlab-ci-multi-runner
  script:
  - $packages = (go list ./... | findstr -v "\/vendor\/" | Out-String | %{$_ -replace "\r\n"," "})
  - $testCommand = "go test $packages"
  - Invoke-Expression $testCommand
  - if ( $LASTEXITCODE -ne 0 ) { exit $LASTEXITCODE }
  allow_failure: true
  tags:
  - integration
  - windows

binaries:
  stage: build
  script:
  - source ci/touch_make_dependencies
  - make deps
  - make build
  artifacts:
    paths:
    - out/binaries/
    expire_in: 7d
  tags:
  - docker

packages:
  stage: package
  script:
  - source ci/touch_make_dependencies
  - apt-get install -yqqq ruby ruby-dev python-pip dpkg-sig createrepo rpm
  - make package
  artifacts:
    paths:
    - out/deb/
    - out/rpm/
    expire_in: 7d
  tags:
  - docker

docker_images:
  <<: *docker
  stage: release
  image: docker:1.12-git
  before_script:
  - source ci/touch_make_dependencies
  - apk -U add make bash
  script:
  - make release_docker_images
  only:
  - master@gitlab-org/gitlab-ci-multi-runner
  - /\Av[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+\Z/@gitlab-org/gitlab-ci-multi-runner
  - /\Av[0-9]+\.[0-9]+\.[0-9]+\Z/@gitlab-org/gitlab-ci-multi-runner
  tags:
  - release

.release: &release
  stage: release
  script:
  - source ci/touch_make_dependencies
  - make release
  tags:
  - release

development:
  <<: *release
  only:
  - branches@gitlab-org/gitlab-ci-multi-runner
  except:
  - master@gitlab-org/gitlab-ci-multi-runner
  environment: bleeding_edge

bleeding:
  <<: *release
  only:
  - master@gitlab-org/gitlab-ci-multi-runner
  - /\Av[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+\Z/@gitlab-org/gitlab-ci-multi-runner
  environment: bleeding_edge

stable:
  <<: *release
  only:
  - /\Av[0-9]+\.[0-9]+\.[0-9]+\Z/@gitlab-org/gitlab-ci-multi-runner
  environment: stable_release
